// Importamos el controlador 'getActivityByIdController' desde el archivo de controladores que maneja la obtenci√≥n de un pa√≠s por su ID.
const { getActivityByIdController } = require("../../controllers/activities/getActivityByIdController");

// Definimos el manejador de la ruta para obtener un pa√≠s por su ID.
const getActivityByIdHandler = async (req, res) => {
  // Extraemos el par√°metro 'id' de los par√°metros de la solicitud HTTP (req.params) para utilizarlo como ID del pa√≠s a buscar en el controlador.
  const { id } = req.params;
  try {
    // Llamamos al controlador 'getActivityByIdController' para obtener el pa√≠s correspondiente al ID proporcionado.
    const Activity = await getActivityByIdController(id);

    // Si no se encuentra un pa√≠s con el ID proporcionado, se lanza un error.
    if (!Activity) throw new Error("Activity not found üôÖ‚Äç‚ôÄÔ∏è");

    // Si se encuentra un pa√≠s con el ID proporcionado, se responde con el c√≥digo de estado 200 y el pa√≠s encontrado en formato JSON.
    res.status(200).json(Activity);
  } catch (error) {
    // Si ocurre alg√∫n error durante la obtenci√≥n del pa√≠s (por ejemplo, si no se encuentra el pa√≠s con el ID proporcionado o hay un error en la base de datos), se responde con el c√≥digo de estado 400 y el mensaje de error en formato JSON.
    res.status(400).json({ error: error.message });
  }
};

// Exportamos el manejador para que pueda ser utilizado en otro lugar, por ejemplo, en la definici√≥n de rutas de la aplicaci√≥n Express para manejar las solicitudes HTTP de obtenci√≥n de un pa√≠s por su ID.
module.exports = { getActivityByIdHandler };
